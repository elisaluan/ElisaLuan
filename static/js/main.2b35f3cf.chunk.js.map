{"version":3,"sources":["fonts/Gloss_And_Bloom.ttf","components/molecules/text.js","components/molecules/battery.js","components/organisms/header.js","components/molecules/global-styles.js","components/molecules/sticky.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Text","styled","div","BatteryContainer","BatteryLevel","Battery","batteryLevel","SplashContainer","window","innerHeight","TitleContainer","Title","BatteryStyle","AboutContainer","Header","width","GlobalStyle","createGlobalStyle","GlossAndBloom","StickyContainer","props","isBurger","isOpen","isSticky","NavList","ul","NavItem","li","StyledBurger","button","BurgerList","BurgerItem","Sticky","handleScroll","useState","setOpen","useEffect","addEventListener","removeEventListener","onClick","href","className","App","isSmallWindow","setSmallWindow","useSticky","setSticky","e","pageYOffset","useControlledSticky","handleResize","innerWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2b35f3cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Gloss_And_Bloom.34424cb4.ttf\";","import styled from 'styled-components';\n\nconst Text = styled.div`\n    position: flex;\n    flex-direction: row;\n    width: 100%;\n    padding: 5px 5px;\n    color: white;\n`;\n\nexport default Text;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Battery = ({batteryLevel}) => {\n    return (\n        <BatteryContainer>\n            <BatteryLevel batteryLevel={batteryLevel}/>\n        </BatteryContainer>\n    );\n};\n\nconst BatteryContainer = styled.div`\n    display: inline-block;\n    border: 3px solid white;\n    width: 18px;\n    height: 28px;\n    padding: 2px;\n    border-radius: 4px;\n    position: relative;\n    margin: 15px 0;\n\n    &:before {\n        content: '';\n        height: 3px;\n        width: 18px;\n        background: white;\n        display: block;\n        position: absolute;\n        top: -6px;\n        border-radius: 4px 4px 0 0;\n      }\n    \n      &:after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: -1px;\n        left: -1px;\n        right: -1px;\n        bottom: -1px;\n        border: 1px solid white;\n        border-radius: 2px;\n      }\n`;\n\nconst BatteryLevel = styled.div`\n    background: #30b455;  \n    position: absolute;\n    bottom: 0px;\n    left: 0;\n    right: 0;\n    height: 20%;\n\n    &.warn {\n    background-color: #EFAF13;\n    }\n    \n    &.alert {\n    background-color: #e81309;\n    \n        &:before {\n        margin: -25px 0 0 2px;\n            content: '';\n            display: inline-block;\n            position: absolute;\n        }\n    }  \n`;\n\nexport default Battery;\n\n// body {\n//     padding: 25px 50px;\n//   }\n  \n//   $lightning-size: 18px;\n  \n//   .battery {\n//     border: 3px solid #333;\n//     width: 18px;\n//     height: 28px;\n//     padding: 2px;\n//     border-radius: 4px;\n//     position: relative;\n//     margin: 15px 0;\n    \n//     &:before {\n//       content: '';\n//       height: 3px;\n//       width: 18px;\n//       background: #333;\n//       display: block;\n//       position: absolute;\n//       top: -6px;\n//       border-radius: 4px 4px 0 0;\n//     }\n  \n//     &:after {\n//       content: '';\n//       display: block;\n//       position: absolute;\n//       top: -1px;\n//       left: -1px;\n//       right: -1px;\n//       bottom: -1px;\n//       border: 1px solid #fff;\n//       border-radius: 2px;\n//     }\n//   }\n  \n//   .battery-level {\n//     background: #30b455;  \n//     position: absolute;\n//     bottom: 0px;\n//     left: 0;\n//     right: 0;\n    \n//     &.warn {\n//       background-color: #EFAF13;\n//     }\n      \n//     &.alert {\n//       background-color: #e81309;\n      \n//       &:before {\n//     background-image: url('data:image/svg+xml;charset=US-ASCII,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22utf-8%22%3F%3E%3C!DOCTYPE%20svg%20PUBLIC%20%22-%2F%2FW3C%2F%2FDTD%20SVG%201.1%2F%2FEN%22%20%22http%3A%2F%2Fwww.w3.org%2FGraphics%2FSVG%2F1.1%2FDTD%2Fsvg11.dtd%22%3E%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20width%3D%2232%22%20height%3D%2232%22%20viewBox%3D%220%200%2032%2032%22%3E%3Cg%3E%3C%2Fg%3E%20%3Cpath%20fill%3D%22%23e81309%22%20d%3D%22M17.927%2012l2.68-10.28c0.040-0.126%200.060-0.261%200.060-0.4%200-0.726-0.587-1.32-1.314-1.32-0.413%200-0.78%200.187-1.019%200.487l-13.38%2017.353c-0.18%200.227-0.287%200.513-0.287%200.827%200%200.733%200.6%201.333%201.333%201.333h8.073l-2.68%2010.28c-0.041%200.127-0.060%200.261-0.060%200.4%200.001%200.727%200.587%201.32%201.314%201.32%200.413%200%200.78-0.186%201.020-0.487l13.379-17.353c0.181-0.227%200.287-0.513%200.287-0.827%200-0.733-0.6-1.333-1.333-1.333h-8.073z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E'); background-repeat: no-repeat;\n//     background-size: $lightning-size;\n//     height: $lightning-size;\n//     width: $lightning-size;\n//     margin: -25px 0 0 2px;\n//         content: '';\n//         display: inline-block;\n//         position: absolute;\n//       }\n//     }    \n//   }","import React from 'react';\nimport styled from 'styled-components';\n\nimport Text from '../molecules/text';\nimport Battery from '../molecules/battery';\n\nconst Header = () => {\n    return (\n        <SplashContainer>\n            <TitleContainer>\n                <Title>Elisa</Title>\n                <Title>\n                    Luan\n                    <BatteryStyle>\n                        <Battery/>\n                    </BatteryStyle>\n                </Title>\n            </TitleContainer>\n            <AboutContainer> \n                <Text> <b>// Under Never Ending Construction</b> </Text>\n                <Text> Waterloo 2B Software Engineering </Text>\n                <Text> Full Stack Developer </Text>\n            </AboutContainer>\n        </SplashContainer>\n    );\n};\nconst SplashContainer = styled.div`\n    position: absolute:\n    top: 0;\n    height: ${window.innerHeight-50}px;\n    width: 100%;\n    background-color: black;\n    z-index: 0;\n`;\n\nconst TitleContainer = styled.div`\n    position: flex;\n    padding-top: ${window.innerHeight/4}px;\n`;\n\nconst Title = styled.div`\n    text-align: center;\n    font-family: GlossAndBloom;\n    color: white;\n    font-size: 100px;\n`;\n\nconst BatteryStyle = styled.div`\n    position: relative;\n    display: inline;\n    padding-left: 15px;\n    margin-right: -15px;\n`;\n\nconst AboutContainer = styled.div`\n    margin-top: 15px;\n    text-align: center;\n    i {\n        font-size: 100px;\n        height: 120px;\n        width: 120px;\n    }\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-contents: center;\n  text-align: center;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${({ width }) => (width*5)}%;\n  margin: 10px 10px;\n`;\n\nexport default Header;","import { createGlobalStyle } from 'styled-components';\nimport GlossAndBloom from '../../fonts/Gloss_And_Bloom.ttf';\n\nconst GlobalStyle = createGlobalStyle`\n    @font-face {\n        font-family: 'GlossAndBloom';\n        src: url(${GlossAndBloom}) format('truetype');\n        font-weight: 300;\n        font-style: normal;\n    }\n`;\n\nexport default GlobalStyle;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nexport const useControlledSticky = () => {\n    const [isSticky, setSticky] = useState(false);\n\n    const handleScroll = e => {\n        if (window.pageYOffset > 0) {\n            setSticky(true);\n        } else {\n            setSticky(false);\n        }\n    } \n\n    return { isSticky, handleScroll };\n};\n\nconst Sticky = ({\n    isSticky,\n    isBurger=true,\n    handleScroll,\n    ...rest\n}) => {\n    const [isOpen, setOpen] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll)\n        }\n    }, []);\n\n    return (\n        <StickyContainer isSticky={isSticky} isBurger={isBurger} isOpen={isOpen}>\n            {isBurger ? \n            <>\n                <StyledBurger isSticky={isSticky} onClick={()=>{setOpen(!isOpen)}}>\n                    <div/>\n                    <div/>\n                    <div/>\n                </StyledBurger>\n                {isOpen ?\n                    <BurgerList isBurger={isBurger} isOpen={isOpen}>\n                        <BurgerItem><a href=\"https://drive.google.com/file/d/1Ef6bKeBEnHesvAxbAViij80usapeACfv/view?usp=sharing\">Resume</a></BurgerItem>\n                        <BurgerItem><i className=\"fa fa-linkedin\"/></BurgerItem>\n                        <BurgerItem><i className=\"fa fa-github\"/></BurgerItem>\n                        <BurgerItem><i className=\"fa fa-envelope-o\"/></BurgerItem>\n                    </BurgerList>\n                :<></>}\n            </>\n            :\n            <NavList isBurger={isBurger} isOpen={isOpen}>\n                <NavItem><a href=\"https://drive.google.com/file/d/1Ef6bKeBEnHesvAxbAViij80usapeACfv/view?usp=sharing\">Resume</a></NavItem>\n                <NavItem><i className=\"fa fa-linkedin\"/></NavItem>\n                <NavItem><i className=\"fa fa-github\"/></NavItem>\n                <NavItem><i className=\"fa fa-envelope-o\"/></NavItem>\n            </NavList>\n            }\n        </StickyContainer>\n    );\n};\n\nconst StickyContainer = styled.div`\n    z-index: 1;\n    height: ${props => props.isBurger ? (props.isOpen ? \"110\":\"45\"):\"50\"}px;\n    position: sticky;\n    top: 0;\n    padding: 0;\n    margin: 0;\n    padding-right: 20px;\n    ${props => props.isSticky ?\n        `\n        background-color: white;\n        color: black;\n        a{\n            color:black;\n        }\n        `\n        :\n        `\n        background-color: black;\n        color: white;\n        a{\n            color: white;\n        }\n        `\n    }\n    padding-top: ${props => props.isBurger ? \"15px\":(props.isSticky ? \"20px\":\"40px\")};\n`;\n\nconst NavList = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    margin: 0px;\n    padding-right: 20px;\n`;\n\nconst NavItem = styled.li`\n    display: flex;\n    padding: 10px 15px;\n    font-family: Roboto;\n    font-size: 14px;\n    text-transform: uppercase;\n\n    i {\n        font-size: 16px;\n    }\n    a {\n        text-decoration: none;\n    }\n    &:hover {\n        font-weight: bold;\n    }\n`;\n\nconst StyledBurger = styled.button`\n  position: absolute;\n  top: 15px;\n  left: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n  \n  &:focus {\n    outline: none;\n  }\n  \n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${props => props.isSticky ? `black`:`white`};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n  }\n`;\n\nconst BurgerList = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    margin: 0px;\n`;\n\nconst BurgerItem = styled.li`\n    display: flex;\n    padding: 10px 15px;;\n    font-family: Roboto;\n    font-size: 14px;\n    text-transform: uppercase;\n    margin-left: 1rem;\n\n    i {\n        font-size: 16px;\n    }\n    a {\n        text-decoration: none;\n    }\n    &:hover {\n        font-weight: bold;\n    }\n`;\n\nexport default Sticky;","import React, { useState, useEffect } from 'react';\n// import { Link, animateScroll as scroll } from 'react-scroll'\n// import styled from 'styled-components';\n\nimport Header from './components/organisms/header';\nimport GlobalStyles from './components/molecules/global-styles';\nimport Sticky, { useControlledSticky } from './components/molecules/sticky';\n\nfunction App() {\n  const [isSmallWindow, setSmallWindow] = useState(true);\n  const useSticky = useControlledSticky();\n\n  const handleResize = () => {\n    if (window.innerWidth < 1000) {\n      setSmallWindow(true);\n    } else {\n      setSmallWindow(false);\n    }\n  }\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <>\n      <GlobalStyles/>\n      <Sticky isBurger={isSmallWindow} {...useSticky}/>  \n      <Header/>  \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}